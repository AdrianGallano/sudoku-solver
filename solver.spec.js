const sudokuSolver = module.require('./solver')


describe("sudoku problems", () => {
    test("sudoku problem 1", () => {
        expect(sudokuSolver([        
        [0,2,0],[0,0,4],[3,0,0],
        [9,0,0],[0,2,0],[0,0,8],
        [0,0,0],[6,0,9],[0,5,0],
        [0,0,0],[0,0,0],[0,0,1],
        [0,7,2],[5,0,3],[6,8,0],
        [6,0,0],[0,0,0],[0,0,0],
        [0,8,0],[2,0,5],[0,0,0],
        [1,0,0],[0,9,0],[0,0,3],
        [0,0,9],[8,0,0],[0,6,0]])).toBe([
        [8,2,7],[1,5,4],[3,9,6],
        [9,6,5],[3,2,7],[1,4,8],
        [3,4,1],[6,8,9],[7,5,2],
        [5,9,3],[4,6,8],[2,7,1],
        [4,7,2],[5,1,3],[6,8,9],
        [6,1,8],[9,7,2],[4,3,5],
        [7,8,6],[2,3,5],[9,1,4],
        [1,5,4],[7,9,6],[8,2,3],
        [2,3,9],[8,4,1],[5,6,7]
        ]);
    });

    test("sudoku problem 2", () => {
        expect(sudokuSolver(        
        [5,3,0],[0,7,0],[0,0,0], 
        [6,0,0],[1,9,5],[0,0,0],
        [0,9,8],[0,0,0],[0,6,0], 
        [8,0,0],[0,6,0],[0,0,3],
        [4,0,0],[8,0,3],[0,0,1], 
        [7,0,0],[0,2,0],[0,0,6],
        [0,6,0],[0,0,0],[2,8,0], 
        [0,0,0],[4,1,9],[0,0,5],
        [0,0,0],[0,8,0],[0,7,9])).toBe([
        [5,3,4],[6,7,8],[9,1,2], 
        [6,7,2],[1,9,5],[3,4,8],
        [1,9,8],[3,4,2],[5,6,7], 
        [8,5,9],[7,6,1],[4,2,3],
        [4,2,6],[8,5,3],[7,9,1], 
        [7,1,3],[9,2,4],[8,5,6],
        [9,6,1],[5,3,7],[2,8,4], 
        [2,8,7],[4,1,9],[6,3,5],
        [3,4,5],[2,8,6],[1,7,9]
        ])
    });
})
